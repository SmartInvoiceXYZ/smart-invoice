{
  "name": "@smartinvoicexyz/contracts",
  "version": "0.1.0",
  "dependencies": {
    "@nomicfoundation/hardhat-toolbox-viem": "^3.0.0",
    "@nomicfoundation/hardhat-viem": "^2.0.3",
    "@openzeppelin/contracts": "^4.0.0",
    "@types/chai": "4.3.16",
    "@types/chai-as-promised": "7.1.8",
    "@types/mocha": ">=9.1.0",
    "@typescript-eslint/eslint-plugin": "^8.2.0",
    "@typescript-eslint/parser": "^8.2.0",
    "chai": "4.4.1",
    "chai-as-promised": "7.1.1",
    "dotenv": "^16.3.1",
    "eslint": "^8.33.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-promise": "^7.1.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "hardhat": "^2.22.9",
    "hardhat-chai-matchers-viem": "^2.0.8",
    "hardhat-gas-reporter": "^1.0.8",
    "prettier": "^3.3.3",
    "prettier-plugin-solidity": "^1.4.1",
    "solhint-community": "^4.0.0",
    "solhint-plugin-prettier": "^0.1.0",
    "solidity-coverage": "^0.8.1",
    "typescript": "^5.3.2",
    "viem": "2.7.6"
  },
  "license": "MIT",
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,yml,yaml,md}": [
      "prettier --write"
    ],
    "*.sol": [
      "prettier --write --plugin=prettier-plugin-solidity",
      "solhint --fix"
    ]
  },
  "private": false,
  "scripts": {
    "add-implementation": "hardhat run scripts/add-implementation.ts --network",
    "build": "hardhat compile && yarn flatten-all",
    "clean": "hardhat clean",
    "compile": "hardhat compile",
    "coverage": "hardhat coverage",
    "coverage:report": "python3 -m http.server --directory ./coverage",
    "create-with-zap": "hardhat run scripts/create-safe-split-escrow.ts --network",
    "deploy-factory": "hardhat run scripts/deploy-factory.ts --network",
    "deploy-spoils-manager": "hardhat run scripts/deploy-spoils-manager.ts --network",
    "deploy-zap": "hardhat run scripts/deploy-zap.ts --network",
    "flatten-all": "yarn flatten-factory && yarn flatten-instant && yarn flatten-escrow && yarn flatten-updatable && yarn flatten-spoils && yarn flatten-zap && yarn flatten-dao-zap",
    "flatten-dao-zap": "hardhat flatten contracts/SafeSplitsDaoEscrowZap.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1' > flat/SafeSplitsDaoEscrowZap.sol",
    "flatten-escrow": "hardhat flatten contracts/SmartInvoiceEscrow.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1'  > flat/SmartInvoiceEscrow.sol",
    "flatten-factory": "hardhat flatten contracts/SmartInvoiceFactory.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1' > flat/SmartInvoiceFactory.sol",
    "flatten-instant": "hardhat flatten contracts/SmartInvoiceInstant.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1'  > flat/SmartInvoiceInstant.sol",
    "flatten-spoils": "hardhat flatten contracts/SpoilsManager.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1'  > flat/SpoilsManager.sol",
    "flatten-updatable": "hardhat flatten contracts/SmartInvoiceUpdatable.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1'  > flat/SmartInvoiceUpdatable.sol",
    "flatten-zap": "hardhat flatten contracts/SafeSplitsEscrowZap.sol | awk '/SPDX-License-Identifier/&&c++>0 {next} 1' > flat/SafeSplitsEscrowZap.sol",
    "format": "prettier --ignore-path .gitignore --write --plugin=prettier-plugin-solidity \"{*,**/*}.{ts,json,md,sol}\"",
    "help": "hardhat help",
    "lint": "yarn lint:sol && yarn lint:ts",
    "lint:sol": "solhint -f table \"contracts/{*,**/*}.sol\"",
    "lint:ts": "eslint --ignore-path .gitignore \"./**/*.ts\" --fix",
    "test": "hardhat test",
    "test-dao-zap": "hardhat test ./test/SafeSplitsDaoEscrowZap.ts",
    "test-escrow": "hardhat test ./test/SmartInvoiceEscrow.ts",
    "test-factory": "hardhat test ./test/SmartInvoiceFactory.ts",
    "test-instant": "hardhat test ./test/SmartInvoiceInstant.ts",
    "test-split": "hardhat test ./test/SmartInvoiceSplitEscrow.ts",
    "test-spoils": "hardhat test ./test/SpoilsManager.ts",
    "test-updatable": "hardhat test ./test/SmartInvoiceUpdatable.ts",
    "test-zap": "hardhat test ./test/SafeSplitsEscrowZap.ts",
    "typecheck": "tsc --noEmit",
    "verify-contract": "hardhat run scripts/verify-contract.ts --network"
  }
}
